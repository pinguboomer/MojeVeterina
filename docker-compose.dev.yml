version: '3.8'
services:
  mv_mongo: #název kontejneru - spíš slouží jako odkaz v rámci docker compose (pro spojování kontejnerů, ...)
    image: mongo:6.0.4
    container_name: mv_mongo #název kontejneru
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mv_mongodb:/data/db  # mongodb: představuje odkaz na volume mongodb, to za dvojtečkou je cesta v kontejneru a určuje co se má do volume ukládat
      - mv_mongodb_config:/data/configdb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      # ANIMAL_EXAMINATIONS
      ANIMAL_EXAMINATIONS_USERNAME: ${DB_ANIMAL_EXAMINATIONS_USER}
      ANIMAL_EXAMINATIONS_PASSWORD: ${DB_ANIMAL_EXAMINATIONS_PASSWORD}
      ANIMAL_EXAMINATIONS_DB: ${DB_ANIMAL_EXAMINATIONS_DB}
      # USERS
      USERS_USERNAME: ${DB_USERS_USER}
      USERS_PASSWORD: ${DB_USERS_PASSWORD}
      USERS_DB: ${DB_USERS_DB}
      # INVOICES
      INVOICES_USERNAME: ${DB_INVOICES_USER}
      INVOICES_PASSWORD: ${DB_INVOICES_PASSWORD}
      INVOICES_DB: ${DB_INVOICES_DB}
      # RESERVATIONS
      RESERVATIONS_USERNAME: ${DB_RESERVATIONS_USER}
      RESERVATIONS_PASSWORD: ${DB_RESERVATIONS_PASSWORD}
      RESERVATIONS_DB: ${DB_RESERVATIONS_DB}
    stdin_open: true
    tty: true

  mv_animal-examinations_node:
    build:  #použití dockerfile pro vytvoření image
      dockerfile: animal-examinations-service/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PROJECT_PATH: ./animal-examinations-service
    command: npm run dev
    container_name: mv_animal_examinations_node
    restart: always
    ports:
      - '${ANIMAL_EXAMINATIONS_SERVICE_PORT}:${ANIMAL_EXAMINATIONS_SERVICE_PORT}'
    environment:
      DB_URI: mongodb://${DB_ANIMAL_EXAMINATIONS_USER}:${DB_ANIMAL_EXAMINATIONS_PASSWORD}@mv_mongo:27017/${DB_ANIMAL_EXAMINATIONS_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${ANIMAL_EXAMINATIONS_SERVICE_PORT}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - mv_mongo
    volumes:
      - ./animal-examinations-service/:/home/node/app
      - ./animal-examinations-service/node_modules:/home/node/app/node_modules
      - ./_lib:/home/node/app/src/_lib

  mv_invoices_node:
    build:
      dockerfile: invoices-service/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PROJECT_PATH: ./invoices-service
    command: npm run dev
    container_name: mv_invoices_node
    restart: always
    ports:
      - '${INVOICES_SERVICE_PORT}:${INVOICES_SERVICE_PORT}'
    environment:
      DB_URI: mongodb://${DB_INVOICES_USER}:${DB_INVOICES_PASSWORD}@mv_mongo:27017/${DB_INVOICES_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${INVOICES_SERVICE_PORT}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - mv_mongo
    volumes:
      - ./invoices-service/:/home/node/app
      - ./invoices-service/node_modules:/home/node/app/node_modules
      - ./_lib:/home/node/app/src/_lib

  mv_reservations_node:
    build:
      dockerfile: reservations-service/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PROJECT_PATH: ./reservations-service
    command: npm run dev
    container_name: mv_reservations_node
    restart: always
    ports:
      - '${RESERVATIONS_SERVICE_PORT}:${RESERVATIONS_SERVICE_PORT}'
    environment:
      DB_URI: mongodb://${DB_RESERVATIONS_USER}:${DB_RESERVATIONS_PASSWORD}@mv_mongo:27017/${DB_RESERVATIONS_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${RESERVATIONS_SERVICE_PORT}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - mv_mongo
    volumes:
      - ./reservations-service/:/home/node/app
      - ./reservations-service/node_modules:/home/node/app/node_modules
      - ./_lib:/home/node/app/src/_lib

  mv_users_node:
    build:
      dockerfile: users-service/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PROJECT_PATH: ./users-service
    command: npm run dev
    container_name: mv_users_node
    restart: always
    ports:
      - '${USERS_SERVICE_PORT}:${USERS_SERVICE_PORT}'
    environment:
      DB_URI: mongodb://${DB_USERS_USER}:${DB_USERS_PASSWORD}@mv_mongo:27017/${DB_USERS_DB}
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${USERS_SERVICE_PORT}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - mv_mongo
    volumes:
      - ./users-service/:/home/node/app
      - ./users-service/node_modules:/home/node/app/node_modules
      - ./_lib:/home/node/app/src/_lib

  mv_api-gateway_node:
    build:
      dockerfile: api-gateway-service/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV}
        PROJECT_PATH: ./api-gateway-service
    command: npm run dev
    container_name: mv_api-gateway_node
    restart: always
    ports:
      - '${API_GATEWAY_SERVICE_PORT}:${API_GATEWAY_SERVICE_PORT}'
    environment:
      JWT_SECRET: ${JWT_SECRET}
      PORT: ${API_GATEWAY_SERVICE_PORT}
      NODE_ENV: ${NODE_ENV}
      ANIMAL_EXAMINATIONS_SERVICE_URL: http://mv_animal_examinations_node:${ANIMAL_EXAMINATIONS_SERVICE_PORT}
      INVOICES_SERVICE_URL: http://mv_invoices_node:${INVOICES_SERVICE_PORT}
      RESERVATIONS_SERVICE_URL: http://mv_reservations_node:${RESERVATIONS_SERVICE_PORT}
      USERS_SERVICE_URL: http://mv_users_node:${USERS_SERVICE_PORT}
    depends_on:
      - mv_mongo
    volumes:
      - ./api-gateway-service/:/home/node/app
      - ./api-gateway-service/node_modules:/home/node/app/node_modules
      - ./_lib:/home/node/app/src/_lib

volumes:  #slouží k perzistentnímu ukládání obsahu kontejnerů / images - pouze deklarace umístění záznamů, provázání v samotném kontejneru
  mv_mongodb:
  mv_mongodb_config: